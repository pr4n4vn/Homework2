---
title: "Programming in Base R"
format: html
editor: visual
---

## Task 1 - Basic Vector Practice
```{r}
#1
pre_bp <- c(130, 128, 116, 124, 133, 134, 118, 126, 114, 127, 141, 138, 128, 140, 137, 131, 120, 128, 139, 135)

post_bp <- c(114, 98, 113, 99, 107, 116, 113, 111, 119, 117, 101, 119, 130, 122, 106, 106, 124, 102, 117, 113)

#2
names(pre_bp) <- paste("Subject", 1:20, sep = "_")
names(post_bp)<- paste("Subject", 1:20, sep = "_")
pre_bp
post_bp

#3
diffbp <- c(pre_bp[1:20] - post_bp[1:20])
diffbp

#4
mean(diffbp)

#5
which(diffbp > 0)

#6
diffbp[diffbp > 0]

#7
mean(diffbp > 0)
```

## Task 2: Basic Data Frame practice

```{r}
#1
my_df <- data.frame(patient = 1:20, pre_bp, post_bp, diffbp)
my_df
attributes(my_df)

#2
my_df[my_df$diffbp < 0, ]

#3
my_df$newcolumn <- ifelse(my_df$post_bp < 120, "TRUE", "FALSE")
my_df$newcolumn
my_df

#4
knitr::kable(my_df)

  
``` 

## Task 3: List Practice
```{r}
#1
pre_bp2 <- c(138, 135, 147, 117, 152, 134, 114, 121, 131, 130)
post_bp2 <- c(105, 136, 123, 130, 134, 143, 135, 139, 120, 124)
diff_bp2 <- c(pre_bp2[1:10] - post_bp2[1:10])
names(pre_bp2) <- paste("Subject", 1:10, sep = "_")
names(post_bp2)<- paste("Subject", 1:10, sep = "_")
my_df2 <- data.frame(patient = 1:10, pre_bp2, post_bp2, diff_bp2)
my_df2
my_df2$post_bp2
my_df2$newcolumn2 <- ifelse(my_df2$post_bp2 > 120, "TRUE", "FALSE")

#2
my_list <- list(treatment = my_df, placebo = my_df2)
my_list$treatment
my_list[[1]]
my_list[1]
my_list$placebo

#3
my_list[[2]][2]
my_list$placebo$post_bp2
```

## Task 4 Control Flow Practice
```{r}
#1
my_df2$status <- character(10)
my_df2
my_df$status <- character(20)
my_df
    
#2
for(i in 1:20) {
    if(my_list$treatment$post_bp[i] <= 120) {
      my_list$treatment$status[i] = "Optimal" 
    } else if(my_list$treatment$post_bp[i] > 120 & my_list$treatment$post_bp[i] <= 130) {
      my_list$treatment$status[i] = "Borderline"
    } else if(my_list$treatment$post_bp[i]> 130) {
      my_list$treatment$status[i] = "High"
    } else {
      my_list$treatment$status[i] = "error"
    }
}


#3
for(i in seq_along(my_list$placebo$post_bp2)) {
    if (my_list$placebo$post_bp2[i] <= 120) {
      my_list$placebo$status[i] = "Optimal" 
    } else if(my_list$placebo$post_bp2[i] > 120 & my_list$placebo$post_bp2[i] <= 130) {
      my_list$placebo$status[i] = "Borderline"
    } else if(my_list$placebo$post_bp2[i]> 130) {
      my_list$placebo$status[i] = "High"
    } else {
      my_list$placebo$status[i] = "error"
    }
}
my_list
```

##Task 5
```{r}
#1

summary_data <- function(my_list, stat = "mean") {

  treatment_df <- my_list$treatment
  placebo_df <- my_list$placebo
  
  my_fun <- get(stat)
  
  summarize_columns <- c("pre", "post", "diff")
  
  summarize_df <- function(my_df) {
    sapply(summarize_columns, function(col) {
      if (col %in% colnames(my_df)) {
        return(my_fun(my_df[[col]], na.rm = TRUE))
      } else {
        return(NA)
      }
  } , USE.NAMES = FALSE)
  
  }
  
  summarize_df2 <- function(my_df2) {
    sapply(summarize_columns, function(col) {
      if (col %in% colnames(my_df2)) {
        return(my_fun(my_df2[[col]], na.rm = TRUE))
      } else {
        return(NA)
      }
  } , USE.NAMES = FALSE)
  
  }
  
  names_summary <- c(paste0("treatment_", summarize_columns), 
                     paste0("placebo_",summarize_columns))
  
  treatment_summary <- summarize_df(treatment_df)
  placebo_summary <- summarize_df2(placebo_df)
  
  values_summary <- c(treatment_summary, placebo_summary)
  
  names(names_summary) <- names_summary
  
  return(values_summary)
}

treatment_df <- my_list$treatment
placebo_df <- my_list$placebo

my_list <- list(treatment = treatment_df, placebo = placebo_df)

result_mean <- summary_data(my_list)
print(result_mean)

result_sd <- summary_data(my_list, stat = "sd")
print(result_sd)
```

